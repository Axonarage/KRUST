var searchIndex = new Map(JSON.parse('[["krust",{"t":"FSSONNQNNCNQQHCCCNNNCOEFOOEOOJOOOOOOHOEOOJNNHNCHHNCHCNNNHJHHHHHJHHHHHHHSSSFNNONNNNNNNNNCCCJFNNNNNNNNNNNSSSFJJJJSSJHONNHOHNNHHHNOHNNNHSFFPPPPPPPPPPPPPPPPPPPPPPPPPOONNNNNNNNNNNNNNNNNNNNNNNCCNOOOGNNNNNNNNNNNHHHHSSSSSSSSPSPGFPFPNNNNNNNNNNNOONNNONNNNNNNNNNNNNNNNONNNNNNOOOOONOOONNNNNNNNNNECCFFFFONNNNNNNNNOOONNNNNONNNNNNNNNNNNOONNNNNNNNNNNN","n":["SYSTEM_PROCESS","TEST_1_PROC_BYTE_CODE","TEST_2_PROC_BYTE_CODE","__private_field","borrow","borrow_mut","check_cookie","deref","from","init","into","log_debug","log_info","main","memory_management","proc","test","try_from","try_into","type_id","utils","BusFault","CURRENT_PROCESS_SP","ExceptionsHandlers","HardFault","MemManage","NEXT_PROCESS_SP","NMI","PendSV","RESET_VECTOR","Reserved_10","Reserved_12","Reserved_13","Reserved_7","Reserved_8","Reserved_9","Reset","SVCall","SysTick","","UsageFault","_EXCEPTIONS","borrow","borrow_mut","enable_system_handler_fault","from","handlers","init_bss","init_data","into","panic","setup_priority_handler","systick","try_from","try_into","type_id","BusFaultHandler","CURRENT_PROCESS_SP","DefaultHandler","FaultHandler","GetFaultAddress","HardFaultHandler","MemoryManagementFaultHandler","NEXT_PROCESS_SP","NMIHandler","PendSV_Handler","SVCallHandler","SysTickHandler","UsageFaultHandler","trigger_pendsv","panic","SYST_CALIB_ADDR","SYST_CSR_ADDR","SYST_RVR_ADDR","SysTick","borrow","borrow_mut","freq","from","init_sys_tick","into","new","set_sys_tick_reload_us","start_sys_tick","try_from","try_into","type_id","allocator","heap","mpu","GLOBAL_ALLOCATOR","SimpleAllocator","alloc","alloc_zeroed","borrow","borrow_mut","dealloc","from","into","realloc","try_from","try_into","type_id","ALIGNMENT","ALIGNMENT_MASK","BLOCK_HEADER_SIZE","BlockLink","END","FREE_BYTES_REMAINING","HEAP","HEAP_INIT","HEAP_SIZE","MINIMUM_BLOCK_SIZE","START","allocate","block_size","borrow","borrow_mut","check_cookie","cookie","deallocate","fmt","from","generate_random","get_free_heap_size","initialize_heap","into","next_free","reset_heap","try_from","try_into","type_id","zeroes_region","MPU_REGION_ENABLE","Mpu","MpuRegion","SIZE_128B","SIZE_128KB","SIZE_128MB","SIZE_16KB","SIZE_16MB","SIZE_1KB","SIZE_1MB","SIZE_256B","SIZE_256KB","SIZE_256MB","SIZE_2KB","SIZE_2MB","SIZE_32B","SIZE_32KB","SIZE_32MB","SIZE_4KB","SIZE_4MB","SIZE_512B","SIZE_512KB","SIZE_512MB","SIZE_64B","SIZE_64KB","SIZE_64MB","SIZE_8KB","SIZE_8MB","attributes","base_address","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","configure_region","disable","enable","eq","","from","","","into","","","mpu_perm","mpu_type","new","number","regions","size","sizeRegion","to_owned","","try_from","","","try_into","","","type_id","","","write_mpu_ctrl","write_mpu_rasr","write_mpu_rbar","write_mpu_rnr","FULL_ACCESS","NO_ACCESS","PRIVILEGED_RW","PRIVILEGED_RW_UNPRIVILEGED_RO","SHAREABLE","TYPE_NORMAL","TYPE_STRONGLY_ORDERED","DEFAULT_STACK_SIZE","Finished","INIT_STACK_FRAME_SIZE","Idle","ProcStatus","Process","Running","SystemProcess","Waiting","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","create_init_stack_frame","create_process","current_mpu_conf","current_process_id","default","disable_current_mpu","enable_current_mpu","entry_point","eq","","exit_current_process","from","","","get_current_priority_process","get_current_process","get_entry_point","get_new_proc_id","get_process_by_id","get_stack_ptr","into","","","kill_process","last_proc_id","list_proc","load_process_code","mpu_region_size_from_memory_len","new","","next_power_of_two_exponent","priority","proc_id","proc_mpu","proc_name","process_list","schedule_next_process","stack","status","stored_sp","to_owned","try_from","","","try_into","","","type_id","","","LinkedList","linked_list","macros","LinkedList","LinkedListIter","LinkedListIterMut","Node","_marker","add","borrow","","","","borrow_mut","","","","current","","data","delete","from","","","","head","into","","","","into_iter","","iter","iter_mut","new","","next","","","tail","try_from","","","","try_into","","","","type_id","","",""],"q":[[0,"krust"],[21,"krust::init"],[56,"krust::init::handlers"],[70,"krust::init::panic"],[71,"krust::init::systick"],[87,"krust::memory_management"],[90,"krust::memory_management::allocator"],[103,"krust::memory_management::heap"],[133,"krust::memory_management::mpu"],[208,"krust::memory_management::mpu::mpu_perm"],[212,"krust::memory_management::mpu::mpu_type"],[215,"krust::proc"],[283,"krust::utils"],[286,"krust::utils::linked_list"],[335,"spin"],[336,"core::result"],[337,"core::any"],[338,"core::panic::panic_info"],[339,"core::alloc::layout"],[340,"core::fmt"],[341,"core::option"],[342,"core::cmp"]],"i":"```f00`00`0``````000`Df``00`00`000000`0`00`00`0```0```000```````````````````Al00000000000`````B`0000000000````````````Bf00`0`00```00`000````Dh000000000000000000000000Bl010Bn21010101000010210210``0101`10210210210````````````Cb`0``0`0h1Ch12022211112110201120110110120111111010000110002120120120```````DbClDd1D`3120303121203212030322120312120312031203","f":"````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}`{{{b{f}}}{{b{{j{h}}}}}}{cc{}}`{{}c{}}``{{}l}```{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bA`}````````````````3`````87{{}Ab}6`{{AdAf}Ab}{{AdAdAf}Ab}7`2`5436`66{AhAh}77`733373{{{b{Aj}}}l}````=<`:{{{b{dAl}}}Ab}:{{}Al}{{{b{Al}}An}Ab}{{{b{Al}}}Ab};:9`````{{{b{B`}}Bb}Ad}0{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{B`}}AdBb}Ab}{cc{}}{{}c{}}{{{b{B`}}AdBbAf}Ad}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bA`}```````````{AfAd}`98{AdBd}`{AdAb}{{{b{Bf}}{b{dBh}}}Bj}9{{}Af}0{{}Ab}:`08763``````````````````````````````>>>==={{{b{Bl}}}Bl}{{{b{Bn}}}Bn}{{b{b{dc}}}Ab{}}0{bAb}0{{{b{dBn}}AdAhAhAh}{{n{Ab{b{C`}}}}}}{{{b{Bn}}}Ab}0{{{b{Bl}}{b{Bl}}}Bd}{{{b{Bn}}{b{Bn}}}Bd}{cc{}}00{{}c{}}00``{{}Bn}````{bc{}}0{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{bA`}00{AhAb}00{AdAb}````````````````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Cb}}}Cb}{{b{b{dc}}}Ab{}}{bAb}{{{b{dh}}AdAd}Ab}{{{b{dh}}{b{C`}}{b{{Cd{Ad}}}}AfAd}Cf}``{{}Cb}{{{b{h}}}Ab}0`{{{b{Cb}}{b{Cb}}}Bd}{{{b{Ch}}{b{Ch}}}Bd}{{{b{dh}}}Ab}{cc{}}00{{{b{dh}}}Ad}{{{b{dh}}}{{Cj{Ch}}}}{{{b{Ch}}}Ad}{{{b{dh}}}Cf}{{{b{dh}}Cf}{{Cj{Ch}}}}{{{b{Ch}}}Ah}{{}c{}}00{{{b{dh}}Cf}Ab}`9{{{b{dh}}{b{{Cd{Ad}}}}Af}Ad}{{{b{h}}Af}Ah}{{}h}{{{b{C`}}CfAdAhAdAd}Ch}{{{b{h}}Af}Af}`````>```{bc{}}{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{bA`}00````````{{{b{d{Cl{c}}}}c}AbCn}{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000```{{{b{d{Cl{c}}}}c}BdCn}{cc{}}000`??????{{{b{d{Cl{c}}}}}{{D`{c}}}Cn}{{{b{d{Cl{c}}}}}{{Db{c}}}Cn}{{cDd}{{Dd{c}}}{}}{{}{{Cl{c}}}Cn}{{{b{d{D`{c}}}}}{{Cj{e}}}{}{}}{{{b{d{Db{c}}}}}{{Cj{e}}}{}{}}``====<<<<;;;;","D":"Hj","p":[[1,"reference"],[0,"mut"],[5,"SYSTEM_PROCESS",0],[5,"SystemProcess",215],[8,"Mutex",335],[1,"never"],[6,"Result",336],[5,"TypeId",337],[1,"unit"],[1,"u8"],[1,"usize"],[1,"u32"],[5,"PanicInfo",338],[5,"SysTick",71],[1,"u64"],[5,"SimpleAllocator",90],[5,"Layout",339],[1,"bool"],[5,"BlockLink",103],[5,"Formatter",340],[8,"Result",340],[5,"MpuRegion",133],[5,"Mpu",133],[1,"str"],[6,"ProcStatus",215],[1,"slice"],[1,"u16"],[5,"Process",215],[6,"Option",341],[5,"LinkedList",286],[10,"PartialEq",342],[5,"LinkedListIter",286],[5,"LinkedListIterMut",286],[5,"Node",286],[5,"ExceptionsHandlers",21],[6,"sizeRegion",133]],"r":[[22,56],[26,56],[38,71],[283,286]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAoBHwAEAAQADAABAA8ADgAfAAUAJgADACsAAgAvAAAAMwAOAEQACgBSAAAAVQAMAGQAEgB4AAIAfAACAIAABgCJACYAswABALsAAQC+ABEA0QALAN4AAADgAAkA7AAHAPoAAAD9AAAAAgEAAAUBCAAPARQAJQEKADUBAAA6ARUA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7447]}