var searchIndex = new Map(JSON.parse('[["krust",{"t":"FSSONNNNCNQQHCCCNNNCOEFOOEOOJOOOOOOHOEOOJNNHNCHHNCHCNNNHJHHHHHJHHHHHHHSSSFNNONNNNNNNNNCCCJFNNNNNNNNNSSSFJJJJSSJHONNHNNHHNOHNNNSFFPPPPPPPPPPPPPPPPPPPPPPPPPOONNNNNNNNNNNNNNNNNNCCNOOOGNNNNNNNNNNHHHHSSSSSSSSPSPGFPFIPNNNNNNNNNNNONONNNNNNNNNNNNNNNNONNONNOOOONOOONNNNNNNNNNECCFFFFONNNNNNNNNOOONNNNNONNNNNNNNNNNNOONNNNNNNNNNNN","n":["SYSTEM_PROCESS","TEST_1_PROC_BYTE_CODE","TEST_2_PROC_BYTE_CODE","__private_field","borrow","borrow_mut","deref","from","init","into","log_debug","log_info","main","memory_management","proc","test","try_from","try_into","type_id","utils","BusFault","CURRENT_PROCESS_SP","ExceptionsHandlers","HardFault","MemManage","NEXT_PROCESS_SP","NMI","PendSV","RESET_VECTOR","Reserved_10","Reserved_12","Reserved_13","Reserved_7","Reserved_8","Reserved_9","Reset","SVCall","SysTick","","UsageFault","_EXCEPTIONS","borrow","borrow_mut","enable_system_handler_fault","from","handlers","init_bss","init_data","into","panic","setup_priority_handler","systick","try_from","try_into","type_id","BusFaultHandler","CURRENT_PROCESS_SP","DefaultHandler","FaultHandler","GetFaultAddress","HardFaultHandler","MemoryManagementFaultHandler","NEXT_PROCESS_SP","NMIHandler","PendSV_Handler","SVCallHandler","SysTickHandler","UsageFaultHandler","trigger_pendsv","panic","SYST_CALIB_ADDR","SYST_CSR_ADDR","SYST_RVR_ADDR","SysTick","borrow","borrow_mut","freq","from","init_sys_tick","into","new","set_sys_tick_reload_us","start_sys_tick","try_from","try_into","type_id","allocator","heap","mpu","GLOBAL_ALLOCATOR","SimpleAllocator","alloc","borrow","borrow_mut","dealloc","from","into","try_from","try_into","type_id","ALIGNMENT","ALIGNMENT_MASK","BLOCK_HEADER_SIZE","BlockLink","END","FREE_BYTES_REMAINING","HEAP","HEAP_INIT","HEAP_SIZE","MINIMUM_BLOCK_SIZE","START","allocate","block_size","borrow","borrow_mut","deallocate","fmt","from","get_free_heap_size","initialize_heap","into","next_free","reset_heap","try_from","try_into","type_id","MPU_REGION_ENABLE","Mpu","MpuRegion","SIZE_128B","SIZE_128KB","SIZE_128MB","SIZE_16KB","SIZE_16MB","SIZE_1KB","SIZE_1MB","SIZE_256B","SIZE_256KB","SIZE_256MB","SIZE_2KB","SIZE_2MB","SIZE_32B","SIZE_32KB","SIZE_32MB","SIZE_4KB","SIZE_4MB","SIZE_512B","SIZE_512KB","SIZE_512MB","SIZE_64B","SIZE_64KB","SIZE_64MB","SIZE_8KB","SIZE_8MB","attributes","base_address","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","configure_region","disable","enable","from","","","into","","","mpu_perm","mpu_type","new","number","regions","size","sizeRegion","to_owned","try_from","","","try_into","","","type_id","","","write_mpu_ctrl","write_mpu_rasr","write_mpu_rbar","write_mpu_rnr","FULL_ACCESS","NO_ACCESS","PRIVILEGED_RW","PRIVILEGED_RW_UNPRIVILEGED_RO","SHAREABLE","TYPE_NORMAL","TYPE_STRONGLY_ORDERED","DEFAULT_STACK_SIZE","Finished","INIT_STACK_FRAME_SIZE","Idle","ProcStatus","Process","Running","SystemProcess","Unknown","Waiting","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","create_init_stack_frame","create_process","current_process_id","default","entry_point","eq","","exit_current_process","from","","","get_current_priority_process","get_current_process","get_entry_point","get_new_proc_id","get_process_by_id","get_stack_ptr","into","","","kill_process","last_proc_id","list_proc","load_process_code","mem_regions","new","","priority","proc_id","proc_name","process_list","schedule_next_process","stack","status","stored_sp","to_owned","try_from","","","try_into","","","type_id","","","LinkedList","linked_list","macros","LinkedList","LinkedListIter","LinkedListIterMut","Node","_marker","add","borrow","","","","borrow_mut","","","","current","","data","delete","from","","","","head","into","","","","into_iter","","iter","iter_mut","new","","next","","","tail","try_from","","","","try_into","","","","type_id","","",""],"q":[[0,"krust"],[20,"krust::init"],[55,"krust::init::handlers"],[69,"krust::init::panic"],[70,"krust::init::systick"],[86,"krust::memory_management"],[89,"krust::memory_management::allocator"],[100,"krust::memory_management::heap"],[126,"krust::memory_management::mpu"],[195,"krust::memory_management::mpu::mpu_perm"],[199,"krust::memory_management::mpu::mpu_type"],[202,"krust::proc"],[266,"krust::utils"],[269,"krust::utils::linked_list"],[318,"spin"],[319,"core::result"],[320,"core::any"],[321,"core::panic::panic_info"],[322,"core::alloc::layout"],[323,"core::fmt"],[324,"core::option"],[325,"core::cmp"]],"i":"```f0000`0``````000`Dh``00`00`000000`0`00`00`0```0```000```````````````````Al00000000000`````B`00000000````````````Bd00`00``00`000```Bn000000000000000000000000Bj0Bl21021111000021021``0101`1021021021````````````Cb`0``0``0h1Cj120222111202011201101101201111010000110002120120120```````DdCnDf1Db3120303121203212030322120312120312031203","f":"````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}{{b{{j{h}}}}}}{cc{}}`{{}c{}}``{{}l}```{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bA`}````````````````3`````87{{}Ab}6`{{AdAf}Ab}{{AdAdAf}Ab}7`2`5436`66{AhAh}77`733373{{{b{Aj}}}l}````=<`:{{{b{dAl}}}Ab}:{{}Al}{{{b{Al}}An}Ab}{{{b{Al}}}Ab};:9`````{{{b{B`}}Bb}Ad}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{B`}}AdBb}Ab}{cc{}}{{}c{}}{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{bA`}```````````{AfAd}`87{AdAb}{{{b{Bd}}{b{dBf}}}Bh}7{{}Af}{{}Ab}8`0765``````````````````````````````<<<;;;{{{b{Bj}}}Bj}{{b{b{dc}}}Ab{}}{{bAd}Ab}{{{b{dBl}}AdAhBnAh}{{n{Ab{b{C`}}}}}}{{{b{Bl}}}Ab}0>>>===``{{}Bl}````{bc{}}>>>===<<<{AhAb}00;`````````````````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Cb}}}Cb}98{{{b{dh}}AdAd}Ab}{{{b{dh}}{b{C`}}{b{{Cd{Ad}}}}AfAd}Cf}`{{}Cb}`{{{b{Cb}}{b{Cb}}}Ch}{{{b{Cj}}{b{Cj}}}Ch}{{{b{dh}}}Ab}{cc{}}00{{{b{dh}}}Ad}{{{b{dh}}}{{Cl{Cj}}}}{{{b{Cj}}}Ad}{{{b{dh}}}Cf}{{{b{dh}}Cf}{{Cl{Cj}}}}{{{b{Cj}}}Ah}{{}c{}}00{{{b{dh}}Cf}Ab}`9{{{b{dh}}{b{{Cd{Ad}}}}Af}Ad}`{{}h}{{{b{C`}}CfAdAhAdAd}Cj}````<```{bc{}}{c{{n{e}}}{}{}}00{{}{{n{c}}}{}}00{bA`}00````````{{{b{d{Cn{c}}}}c}AbD`}{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000```{{{b{d{Cn{c}}}}c}ChD`}{cc{}}000`===={{}c{}}0{{{b{d{Cn{c}}}}}{{Db{c}}}D`}{{{b{d{Cn{c}}}}}{{Dd{c}}}D`}{{cDf}{{Df{c}}}{}}{{}{{Cn{c}}}D`}{{{b{d{Db{c}}}}}{{Cl{e}}}{}{}}{{{b{d{Dd{c}}}}}{{Cl{e}}}{}{}}``>>>>====<<<<","D":"Hh","p":[[1,"reference",null,null,1],[0,"mut"],[5,"SYSTEM_PROCESS",0],[5,"SystemProcess",202],[8,"Mutex",318],[1,"never"],[6,"Result",319,null,1],[5,"TypeId",320],[1,"unit"],[1,"u8"],[1,"usize"],[1,"u32"],[5,"PanicInfo",321],[5,"SysTick",70],[1,"u64"],[5,"SimpleAllocator",89],[5,"Layout",322],[5,"BlockLink",100],[5,"Formatter",323],[8,"Result",323],[5,"MpuRegion",126],[5,"Mpu",126],[6,"sizeRegion",126],[1,"str"],[6,"ProcStatus",202],[1,"slice"],[1,"u16"],[1,"bool"],[5,"Process",202],[6,"Option",324,null,1],[5,"LinkedList",269],[10,"PartialEq",325],[5,"LinkedListIter",269],[5,"LinkedListIterMut",269],[5,"Node",269],[5,"ExceptionsHandlers",20]],"r":[[21,55],[25,55],[37,70],[266,269]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPoAHQAEAAMACwABAA4ADgAeAAUAJQADACoAAgAuAAAAMgAOAEMACgBRAAAAVAALAGIAEwB3AAEAegAFAIIAIwCvAAEAsgAQAMQACwDRAAAA0wAKAOAABADrAAAA7gAAAPMAAAD2AAYA/gAUABQBCgAkAQAAKQEVAA==","P":[[4,"T"],[6,""],[7,"T"],[9,"U"],[12,""],[16,"U,T"],[17,"U"],[18,""],[41,"T"],[43,""],[44,"T"],[46,""],[48,"U"],[50,""],[52,"U,T"],[53,"U"],[54,""],[74,"T"],[78,""],[79,"U"],[80,""],[83,"U,T"],[84,"U"],[85,""],[92,"T"],[94,""],[95,"T"],[96,"U"],[97,"U,T"],[98,"U"],[99,""],[113,"T"],[115,""],[117,"T"],[118,""],[120,"U"],[122,""],[123,"U,T"],[124,"U"],[125,""],[156,"T"],[162,""],[163,"T"],[164,""],[168,"T"],[171,"U"],[176,""],[181,"T"],[182,"U,T"],[185,"U"],[188,""],[212,"T"],[218,""],[219,"T"],[220,""],[229,"T"],[232,""],[238,"U"],[241,""],[256,"T"],[257,"U,T"],[260,"U"],[263,""],[274,"T"],[292,"U"],[296,"I"],[298,"T"],[302,"T,Iterator::Item"],[306,"U,T"],[310,"U"],[314,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[7704]}